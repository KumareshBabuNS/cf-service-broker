heat_template_version: 2013-05-23
description: Deployment Description for RabbitMQ
parameters:
  image_id:
    type: string
    description: Image used for servers
  keypair:
    type: string
    description: SSH key to connect to the servers
  flavor:
    type: string
    description: flavor used by the web servers
  network_id:
    type: string
    description: Network used by the server
  subnet_id:
    type: string
    description: subnet on which the load balancer will be located
  volume_size:
    type: number
    description: Size of the volume to be created.
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
  rabbit_vhost:
    type: string
    description: Database name
  rabbit_user:
    type: string
    description: Database user
  rabbit_password:
    type: string
    description: Database password
resources:
  nova_instance:
    type: OS::Nova::Server
    properties:
      flavor: {get_param: flavor}
      image: {get_param: image_id}
      key_name: {get_param: keypair}
      networks: [{network: {get_param: network_id} }]
      user_data_format: RAW
      security_groups:
        - all
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            export REPOSITORY_RABBITMQ="https://bitbucket.org/evoila-boxer/deployment-scripts-docker-openstack/raw/master/Rabbitmq-v3"
            export REPOSITORY_MAIN="https://bitbucket.org/evoila-boxer/deployment-scripts-docker-openstack/raw/master"
            
            wget $REPOSITORY_RABBITMQ/rabbitmq-template.sh
            chmod +x rabbitmq-template.sh
            ./rabbitmq-template.sh  -d $amqp_vhost -u $amqp_user -p $amqp_password -e openstack          
          params:
            $amqp_vhost: {get_param: rabbit_vhost}
            $amqp_user: {get_param: rabbit_user}
            $amqp_password: {get_param: rabbit_password}
  cinder_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
      availability_zone: { get_param: availability_zone }
  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume }
      instance_uuid: { get_resource: nova_instance }
      mountpoint: /dev/vdc
